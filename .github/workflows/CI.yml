name: CI
on:
  push:
    branches:
      - dev
      - '**'
      - '!gh-pages'
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      ICARE_USER: ${{ secrets.ICARE_USER }}
      ICARE_PASSWORD: ${{ secrets.ICARE_PASSWORD }}
    permissions:
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v5
      - name: Add sftp.icare.univ-lille.fr to known_hosts
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H -t rsa,ecdsa,ed25519 sftp.icare.univ-lille.fr >> ~/.ssh/known_hosts
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Setup Julia environment
        env:
          JULIA_NUM_THREADS: 2
        shell: julia --project --color=yes {0}
        run: |
          using Pkg
          Pkg.rm("SFTP")
          Pkg.add(url="https://github.com/LIM-AeroCloud/SFTP.jl.git#main")
          Pkg.instantiate()
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1

      # Default test run (SFTP integration skipped)
      - uses: julia-actions/julia-runtest@v1
        env:
          RUN_SFTP_TESTS: "0"

      # Integration test: only on ubuntu and trusted contexts (not fork PRs)
      - uses: julia-actions/julia-runtest@v1
        if: matrix.os == 'ubuntu-latest' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
        env:
          ICARE_USER: ${{ secrets.ICARE_USER }}
          ICARE_PASSWORD: ${{ secrets.ICARE_PASSWORD }}

      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      actions: write # needed to allow julia-actions/cache to proactively delete old caches that it has created
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v5
      - name: Add sftp.icare.univ-lille.fr to known_hosts
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H -t rsa,ecdsa,ed25519 sftp.icare.univ-lille.fr >> ~/.ssh/known_hosts
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Configure doc environment
        shell: julia --project --color=yes {0}
        run: |
          using Pkg
          Pkg.rm("SFTP")
          Pkg.add(url="https://github.com/LIM-AeroCloud/SFTP.jl.git#main")
          Pkg.activate("docs")
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - name: Run doctests
        shell: julia --project=docs --color=yes {0}
        run: |
          using Documenter: DocMeta, doctest
          using ICARE
          DocMeta.setdocmeta!(ICARE, :DocTestSetup, :(using ICARE); recursive=true)
          doctest(ICARE)
