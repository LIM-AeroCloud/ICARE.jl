var documenterSearchIndex = {"docs":
[{"location":"release-notes.html#Release-Notes","page":"Release notes","title":"Release Notes","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"This project uses Semantic Versioning. The format of the release notes follows Keep a Changelog.","category":"page"},{"location":"release-notes.html#[UNRELEASED]","page":"Release notes","title":"[UNRELEASED]","text":"","category":"section"},{"location":"release-notes.html#Added","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Add unit tests and code coverage","category":"page"},{"location":"release-notes.html#Fixed","page":"Release notes","title":"Fixed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Automatically update version number in the badge in the README and the link to the latest stable during pre-release","category":"page"},{"location":"release-notes.html#[v0.5.0](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.5.0)-2025-08-31","page":"Release notes","title":"v0.5.0 - 2025-08-31","text":"","category":"section"},{"location":"release-notes.html#Added-2","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Use a local .inventory.yaml to store stats of the server-side file structure in the root of the product folder and reduce communication with the server\nSupport of parallel downloads\nSupport of file format conversions with focus on HDF4 > HDF5\nAdd routines just for conversions of local downloads\nAdd Documenter documentation page and this CHANGELOG (release notes)\nAdd GitHub workflows for CI/CD\nAdd Makefile and release-scripts for automated release processes","category":"page"},{"location":"release-notes.html#Changed","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Switched from FTP to SFTP protocol for downloads\nComplete refactoring of the code, simplify download and restart routines\nImproved logging\nReorganise downloads in a single loop\nConversion routines are now directly included in the code and not called as script with the run command; they may be overloaded with custom routines for other conversions","category":"page"},{"location":"release-notes.html#[v0.4.0](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.4.0)-2021-08-04","page":"Release notes","title":"v0.4.0 - 2021-08-04","text":"","category":"section"},{"location":"release-notes.html#Changed-2","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Use Int to define start/end dates or periods for downloads","category":"page"},{"location":"release-notes.html#[v0.3.3](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.3.3)-2021-05-17","page":"Release notes","title":"v0.3.3 - 2021-05-17","text":"","category":"section"},{"location":"release-notes.html#Added-3","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"New option to restart a download session by kwarg\nSet v1.0.0 as minimum requirement for Julia","category":"page"},{"location":"release-notes.html#Changed-3","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Better error handling","category":"page"},{"location":"release-notes.html#[v0.3.2](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.3.2)-2021-04-22","page":"Release notes","title":"v0.3.2 - 2021-04-22","text":"","category":"section"},{"location":"release-notes.html#Changed-4","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Update package dependencies\nInternal refactoring for changes in CSV.read","category":"page"},{"location":"release-notes.html#[v0.3.1](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.3.1)-2021-04-21","page":"Release notes","title":"v0.3.1 - 2021-04-21","text":"","category":"section"},{"location":"release-notes.html#Added-4","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Checks for product name and version number","category":"page"},{"location":"release-notes.html#[v0.3.0](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.3.0)-2020-04-14","page":"Release notes","title":"v0.3.0 - 2020-04-14","text":"","category":"section"},{"location":"release-notes.html#Added-5","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"New option to append log files\nAbility to restart interrupted download sessions","category":"page"},{"location":"release-notes.html#Changed-5","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Update log file format","category":"page"},{"location":"release-notes.html#[v0.2.2](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.2.2)-2020-04-07","page":"Release notes","title":"v0.2.2 - 2020-04-07","text":"","category":"section"},{"location":"release-notes.html#Added-6","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"New flag to suppress downloads in a run","category":"page"},{"location":"release-notes.html#Fixed-2","page":"Release notes","title":"Fixed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Fix corrupted Project.toml","category":"page"},{"location":"release-notes.html#[v0.2.1](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.2.1)-2020-04-06","page":"Release notes","title":"v0.2.1 - 2020-04-06","text":"","category":"section"},{"location":"release-notes.html#Added-7","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"New option none to remove no displaced files","category":"page"},{"location":"release-notes.html#[v0.2.0](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.2.0)-2020-04-06","page":"Release notes","title":"v0.2.0 - 2020-04-06","text":"","category":"section"},{"location":"release-notes.html#Added-8","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Option to warn and clean data folders of alien files","category":"page"},{"location":"release-notes.html#Changed-6","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Revised FTP connection and download of files","category":"page"},{"location":"release-notes.html#[v0.1.2](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.1.2)-2020-04-05","page":"Release notes","title":"v0.1.2 - 2020-04-05","text":"","category":"section"},{"location":"release-notes.html#Added-9","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Add Logging as dependency","category":"page"},{"location":"release-notes.html#[v0.1.1](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.1.1)-2020-03-30","page":"Release notes","title":"v0.1.1 - 2020-03-30","text":"","category":"section"},{"location":"release-notes.html#Added-10","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Improved error handling\nImproved README","category":"page"},{"location":"release-notes.html#Changed-7","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Add leading slash to caliopdir to generate absolute paths with joinpath","category":"page"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"rather than relative paths","category":"page"},{"location":"release-notes.html#Fixed-3","page":"Release notes","title":"Fixed","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Reconnect to ICARE and create a new FTP object for every subfolder to","category":"page"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"prevent LibCurl error 9","category":"page"},{"location":"release-notes.html#[v0.1.0](https://github.com/LIM-AeroCloud/ICARE.jl/releases/tag/v0.1.0)-2020-03-30","page":"Release notes","title":"v0.1.0 - 2020-03-30","text":"","category":"section"},{"location":"release-notes.html#Added-11","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes.html","page":"Release notes","title":"Release notes","text":"Initial download routine using FTPClient","category":"page"},{"location":"adaptation.html#Adapting-the-package","page":"Adaptation","title":"Adapting the package","text":"","category":"section"},{"location":"adaptation.html#Intended-use","page":"Adaptation","title":"Intended use","text":"","category":"section"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"The package is written to synchronise CALIOP data from the AERIS/ICARE server a local system. Data is in the format:","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"<root>/<product>.v<Major>.<Minor>/yyyy/yyyy_mm_dd","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"The product version consists of a single-digit major and double-digit minor version. HDF4 data files (.hdf) are located in the date folders at the lowest level. The can be converted to HDF5 format (.h5). All this functionality can be achieved with the sftp_download function.","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"warning: Important notice\nAll adaptations described here should work in theory, but have never been tested in reality. If you encounter problems and find a workaround for it, consider a PR with a documentation update. If you have troubles, finding a solution or workaround, feel free to open a new issue.","category":"page"},{"location":"adaptation.html#Use-different-products-with-the-same-format","page":"Adaptation","title":"Use different products with the same format","text":"","category":"section"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"The AERIS/ICARE data server holds other products with the same structure; sftp_download can be directly used to download this data, by changing the remoteroot keyword argument to the new root path and supplying the correct product argument. If the data files are not in HDF4 format or and upgrade to HDF5 is not desired, switch the convert keyword argument to false.","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"Some products have different version formats, but the same folder structure. For these products, you need to set the version keyword argument to nothing and give the complete folder name (product name and version number) to the third positional product argument. Any products without the above folder structure cannot be synchronised with this package.","category":"page"},{"location":"adaptation.html#Converting-to-other-file-formats","page":"Adaptation","title":"Converting to other file formats","text":"","category":"section"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"If you prefer to convert the downloaded files to another file format, you can write your own conversion routine and overload the routines of the ICARE.jl package. You need the following routines with the given signature (function names, argument types and return types must match):","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"newext()::String returns the file extension including the leading dot for the converted format, e.g. \".h5\" for the default conversion\nconvert_file(input::String, output::String)::Nothing converts the input file to the output format; both input and output may be absolute or relative paths to the respective files","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"In your script import (or use) the ICARE package, overload the above functions (don't forget to prepend each function name with ICARE. as both functions are unexported) and call the sftp_download function. An example script can look like this:","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"using ICARE\n\nICARE.newext() = \".newext\"\n\nfunction ICARE.convert_file(input::String, output::String)\n    # Convert path/to/input.ext > path/to/output.newext here\n    return\nend\n\nsftp_download(\"user\", \"password\", \"product\", 20200220)","category":"page"},{"location":"adaptation.html","page":"Adaptation","title":"Adaptation","text":"The function signatures of the default functions are these:","category":"page"},{"location":"adaptation.html#ICARE.convert_file","page":"Adaptation","title":"ICARE.convert_file","text":"convert_file(input::String, output::String[, convert::Bool])\n\nConvert the input to the output format unless convert is false (if provided). Both input and output can be absolute or relative paths.\n\n\n\n\n\n","category":"function"},{"location":"adaptation.html#ICARE.newext","page":"Adaptation","title":"ICARE.newext","text":"newext([inventory::OrderedDict, convert::Bool]) -> String\n\nReturn the extension of the converted file format or the original file extension from the inventory, when convert is false (no conversion). If no arguments are provided, return the default extension of the converted file format.\n\n\n\n\n\n","category":"function"},{"location":"download.html#Downloading-from-the-ICARE-server","page":"Download","title":"Downloading from the ICARE server","text":"","category":"section"},{"location":"download.html#Synchronising-folder-structure","page":"Download","title":"Synchronising folder structure","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"ICARE.jl is meant for data that is arranged by years and dates with the following structure:","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"<root>/<product folder>/yyyy/yyyy_mm_dd","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"This folder structure is synchronised with the local system and data files are downloaded to the date folders at the lowest level. To minimize server communication and speed up download processes, a local .inventory.yaml file (hidden on Linux and MacOs) is created in the product folder. The .inventory.yaml contains information about the folder structure and file stats and should not be edited or deleted. The inventory is created before the first download of a given product. This process takes several minutes up to hours in extreme cases. After the initial setup, only dates outside the known date range are updated, which is much faster, unless a complete resynchronisation is forced.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"warning: Important Notice\nDon't edit or delete the .inventory.yaml file in each main product folder unless you know what you are doing! The creation or resynchronisation of the inventory takes several minutes or up to hours in extreme cases.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"note: Note\nInventories may not be nested, i.e. a product folder may not be inside another product folder.","category":"page"},{"location":"download.html#Downloading-data-files","page":"Download","title":"Downloading data files","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"Use the sftp_download function to synchronise the AERIS/ICARE server with the local system. Mandatory arguments are the ICARE user credentials, the product, and the date span. Further fine-tuning of the downloads is possible with keyword arguments as described in the sftp_download help.","category":"page"},{"location":"download.html#ICARE.sftp_download","page":"Download","title":"ICARE.sftp_download","text":"sftp_download(\n    user::String,\n    password::String,\n    product::String,\n    startdate::Int,\n    enddate::Int=-1;\n    version::Union{Nothing,Real} = 4.51,\n    remoteroot::String = \"/SPACEBORNE/CALIOP/\",\n    localroot::String = \".\",\n    convert::Bool = true,\n    resync::Bool = false,\n    update::Bool = false,\n    logfile::String = \"downloads.log\",\n    loglevel::Symbol = :Debug\n\n)\n\nDownload satellite data from the Aeris/ICARE server.\n\nnote: Note\nTo use sftp_download, an Aeris/ICARE account is needed that is available for free for non-commercial use.\n\nPositional arguments\n\nuser::String/password::String: Aeris/ICARE account credentials\nproduct::String: The desired product to download (matches the folder name excluding the version number, e.g., 05kmCPro)\nstartdate::Int/enddate::Int: The start/end date for the download period as Int (format: yyyy[mm[dd]]);\n\nIn the dates, the day and month part can be omitted. In this case, the earliest possible start date is selected and the latest possible end date, e.g. 202003 will give a start date of 2020-03-01 and an end date of 2020-03-31. The end date is optional, if omitted, the period defined by startdate is downloaded, either a day, or a month (if the day part is omitted) or a year (if both day and month are omitted).\n\nKeyword arguments\n\nversion::Union{Nothing,Real}: The version number of the product (default: 4.51).\nremoteroot::String: The root path on the remote server (default: \"/SPACEBORNE/CALIOP/\").\nlocalroot::String: The root path on the local machine containing the product folder (default: \".\").\nconvert::Bool: Whether or not to convert the downloaded files to another file format (default: true).\nresync::Bool: Whether to re-synchronize the local inventory with the remote server (default: false).\nupdate::Bool: Whether to update the local files if newer versions are available on the remote server (default: false).\nlogfile::String: The name of the log file (default: \"downloads.log\"; the name will be appended by the current date and time).\nloglevel::Symbol: The log level for the download process (default: :Debug).\n\nwarning: Warning\nThe update option automatically resynchronises the inventory as well.Re-synchronisation of the inventory will take several minutes up to hours!\n\nFor custom version formats, the version can be set to nothing and included in the product string. By default, the product folder is constructed as <product>.v<X.XX> with the version as float with two decimal places independent of the input format.\n\nBy default, hdf files (version 4) are assumed as download source, which will be converted to .h5 (HDF5) file unless convert is set to false.\n\n\n\n\n\n","category":"function"},{"location":"download.html#Specifying-the-download-product","page":"Download","title":"Specifying the download product","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"By default, CALIOP data (/SPACEBORNE/CALIOP) will be downloaded, but can be changed with the remoteroot keyword argument. Data will be downloaded to the current folder or the folder specified by localroot. Use the third positional argument to specify the product, you want to download. Products are assumed in the format <name>.v.<X.XX>, where X.XX is the version number with a two-digit minor version. By default, version 4.51 is assumed, but can be changed with the version keyword argument (e.g., upgrade to version 5 with version=5).","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"note: Note\nCurrently, the newest version 5 shows a significant performance decrease on the server side. Therefore, version 4.51 was chosen as the current default.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"For custom formats, version can be set to nothing and the entire name and version string passed to the product argument.","category":"page"},{"location":"download.html#Specifying-a-date-range","page":"Download","title":"Specifying a date range","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"For convenience, dates are given as integers, so users don't have to import the Dates package. You can either give one date range as fourth positional argument or a start and end date as fourth and fifth positional argument.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"The date format is yyyy[mm[dd]], where the day and/or month part can be omitted. Defining a span is possible for:","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"a whole year (yyyy)\na whole month (yyyymm)\na day (yyyymmdd)","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"If the the day and/or month are omitted in the start or end date, they will be filled with the  earliest possible day for the startdate and the latest possible date for the enddate. ","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"Some examples are:","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"20220212: Download the whole day of 2022-02-12\n202004: Download the whole April of 2020\n2020: Download the whole year 2020\n2002, 200206: Download the first half of 2002\n200207, 2002: Download the second half of 2002\n200003, 20000315: Download the first half of March 2000\n20000316, 200003: Download the second half of March 2000","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"Only complete days can be downloaded.","category":"page"},{"location":"download.html#Updating-the-inventory","page":"Download","title":"Updating the inventory","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"As mentioned before, updating the entire inventory including the parts already synced may take a long time and should not be necessary under normal circumstances. It can be achieved by setting resync to true.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"If you want to check for updated data files on the server, you can set the update flag to true. This will also resync the complete inventory and, hence, take a long time to finish. If update is set, any newer file on the server compared to the modified time on the local system will be downloaded.","category":"page"},{"location":"download.html#Logging","page":"Download","title":"Logging","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"Some basic information about the current download session is printed to the screen with further comprehensive information in a log file. By default, log files are saved to the product folder as download_<timestamp>.log. You can change the file name with the logfile keyword argument. The file name will automatically be appended with the time stamp, when the download session started. If the file name includes a path, the logfile will be saved to this path. The path can be absolute or relative to your current location (where you started your julia session or where you change to during your julia session), i.e. logfile = \"~/icare.log\" will create a logfile icare_<timeestamp>.log in your root directory. Note that the extension can be change as well to, e.g., .txt or .dat.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"For the log file the verbosity can be set to 4 levels given as Symbol (with verbosity listed from least to most):","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"Error\nWarn\nInfo\nDebug","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"By default, all messages are printed allowing you to track the download status on screen and in the log file. The Debug level is used to inform about completed downloads.","category":"page"},{"location":"download.html#Converting-data-files","page":"Download","title":"Converting data files","text":"","category":"section"},{"location":"download.html#During-download","page":"Download","title":"During download","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"During an sftp_download, you can set the convert keyword argument to true. By default, this will save downloads in the HDF5 (.h5) format instead of the expected HDF4 (.hdf) format. You can overload the ICARE.convert_file function, see section about Converting to other file formats. However, only one or the other format will be saved.","category":"page"},{"location":"download.html","page":"Download","title":"Download","text":"tip: Tip\nIf, you want both formats saved on your local machine, download the original format with sftp_download by setting convert to false and re-run sftp_download with convert=true. The second run will only convert the files without re-downloading them and also keep the original downloads. If your run sftp_download with convert=true the first time, original downloads are not kept.","category":"page"},{"location":"download.html#Separate-file-conversions","page":"Download","title":"Separate file conversions","text":"","category":"section"},{"location":"download.html","page":"Download","title":"Download","text":"Routines related to file conversion without download from the AERIS/ICARE server are being refactored. They may or may not work at current.","category":"page"},{"location":"download.html#ICARE.hdfupgrade","page":"Download","title":"ICARE.hdfupgrade","text":"hdfupgrade(\n    product::String,\n    version::Float64 = 4.51;\n    localroot::String = \".\",\n    remoteroot::String = \"/SPACEBORNE/CALIOP\",\n    user::String = \"\",\n    password::String = \"\",\n    clean::Bool = false,\n    h4ext::String = \".hdf\",\n    h5ext::String = \".h5\",\n    logfile::String = \"conversions.log\",\n    loglevel::Symbol = :Debug\n)\n\nConvert all HDF4 data files to HDF5 files (with h4ext/h5ext file extensions, respectively) that are part of specified product in the given version.\n\nTo check, whether hdf files are part of the product, the are compared to the inventory file in the product folder in the localroot. Additional checks against the ICARE server can be performed with a significant increase in processing time, if the ICARE user name and password are given as well as the remoteroot of the product folder on the server.\n\nBy default, files are upgraded to HDF5 standard and original files are kept. If clean is set to true, the original files are deleted upon confirmation. This means that data files will have to be re-downloaded, if data files in the original HDF4 format are needed!\n\nEvents of the desired loglevel will be logged to logfile. A timestamp will be added to each logfile so that a unique logfile is created for every run and logfiles are not overwritten.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ICARE.jl","page":"Home","title":"ICARE.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"(Image: ICARE logo)","category":"page"},{"location":"index.html#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"ICARE.jl provides a secure ftp connection to the ICARE Data and Services Centre to download available satellite data. The package is intended for CALIOP data, but was written in a generic way that should allow downloads of any data with a folder structure:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"<root path>/<main product folder>/yyyy/yyyy_mm_dd","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Furthermore, ICARE.jl allows the upgrade of HDF4 file format used in the ICARE database to HDF5 or any user defined conversions. Parallel downloads are possible by starting julia with multiple threads:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"julia --threads auto","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Or with the short form:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"julia -t auto","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"auto will give all available threads on the current system, but depending on the internet connection, fewer threads may be desired. In this case, give the number of threads instead of auto.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"note: Note\nTo use the package, a user account at the AERIS/ICARE Data Centre is needed, which is available free of charge for scientific, non-commercial use.","category":"page"},{"location":"index.html#License","page":"Home","title":"License","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"ICARE.jl is free to use under the Gnu General Public License. However, binaries included for the HDF4 to HDF5 file conversion are available under the szip license for non-commercial, scientific use only.","category":"page"},{"location":"index.html#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"ICARE.jl is an unregistered Julia package, but can be installed with the package manager. Start the package manager by typing ] in the REPL and add _ICARE.jl__ with:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"add https://github.com/LIM-AeroCloud/ICARE.jl.git","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"By default, the development version will be installed. To use released stable versions switch to the main channel by installing ICARE.jl with:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"add https://github.com/LIM-AeroCloud/ICARE.jl.git#main","category":"page"},{"location":"index.html#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"index.md\",\n    \"download.md\",\n    \"adaptation.md\",\n    \"release-notes.md\",\n    \"register.md\"\n]","category":"page"},{"location":"register.html#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"register.html","page":"Index","title":"Index","text":"","category":"page"}]
}
